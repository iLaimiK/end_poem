const t='_internal.previousSecondaryCharacters';function n(t){if(!Array.isArray(t))return t;const n=new Set,e=[];for(const o of t)if('string'==typeof o){const t=o.trim();t&&!n.has(t)&&(n.add(t),e.push(o))}else e.push(o);return e}const e=['莉瑟尔·冯·阿尔卡德 (血族公主)','艾露薇娅·瑟兰迪尔 (精灵公主)','理子 (机械生命，前文明独立作战单元)','露克希娅 (天使，高阶司书)','青璇 (龙裔，青龙，古老盟约的孤独守护者)','橘奈绪 (百兽裔，猫又亚种，斥候与猎手)','琥珀 (百兽裔，九尾狐亚种，情报贩子)'];function o(t){return t.trim().split(' (')[0].trim().split('·')[0].trim()}function r(t){const n=t.trim();if(e.includes(n))return!0;for(const t of e){if(t.split(' (')[0].trim()===n.split(' (')[0].trim())return!0}for(const t of e){if(t.split(' (')[0].trim().split('·')[0].trim()===n)return!0}return!1}function s(t){const n=_.get(t,'全局信息',{});return{时间:_.get(n,'时间',''),地点:_.get(n,'当前位置',''),日期:_.get(n,'日期','')}}function a(t){if(!_.has(t,'次要角色'))return;const n=_.get(t,'次要角色');if(!_.isObject(n)||Array.isArray(n))return;const e=[];for(const t in n)r(t)||e.push(t);if(e.length>0){console.log(`[次要角色限制] 检测到不允许的角色，正在移除: ${e.join(', ')}`);for(const n of e)_.unset(t,`次要角色.${n}`)}}function i(t,n){_.has(t,'次要角色记录')||_.set(t,'次要角色记录',{});const e=s(t),r=o(n),a=`次要角色记录.${r}`,i=`次要角色.${n}`,c=_.get(t,a);if(c&&'object'==typeof c){console.log(`[次要角色管理] ${n} (记录名: ${r}) 重新出场，恢复记录信息`);const o=_.get(c,'信任值',.01);_.has(t,`${i}.信任值`)&&(_.set(t,`${i}.信任值`,o),console.log(`[次要角色管理] 恢复 ${n} 的信任值: ${o}`));const s=_.get(c,'离场时持有的物品',{}),l=_.get(t,`${i}.持有物品`,{});if(Object.keys(s).length>0){const e={...s,...l};_.set(t,`${i}.持有物品`,e),console.log(`[次要角色管理] 恢复 ${n} 的物品，合并${Object.keys(s).length}件之前的物品`)}_.set(t,`${a}.出场次数`,_.get(c,'出场次数',0)+1),_.set(t,`${a}.出场地点`,e.地点),_.set(t,`${a}.出场时间`,`${e.日期} ${e.时间}`),_.set(t,`${a}.离场地点`,'待定'),_.set(t,`${a}.离场时间`,'N/A')}else{console.log(`[次要角色管理] ${n} (记录名: ${r}) 首次出场，创建新记录`);const o={出场次数:1,出场地点:e.地点,出场时间:`${e.日期} ${e.时间}`,离场地点:'待定',离场时间:'N/A',信任值:_.get(t,`${i}.信任值`,.01),离场时持有的物品:{}};_.set(t,a,o)}console.log(`[次要角色管理] ${n} 出场记录已更新`)}function c(t,n,e){_.has(t,'次要角色记录')||_.set(t,'次要角色记录',{});const r=s(t),a=o(n),i=`次要角色记录.${a}`;if(console.log(`[次要角色管理] ${n} (记录名: ${a}) 离场，保存当前状态`),!_.has(t,i)){const n={出场次数:1,出场地点:'',出场时间:'',离场地点:'待定',离场时间:'N/A',信任值:.01,离场时持有的物品:{}};_.set(t,i,n)}_.set(t,`${i}.离场地点`,r.地点),_.set(t,`${i}.离场时间`,`${r.日期} ${r.时间}`);const c=_.get(e,'信任值',.01);_.set(t,`${i}.信任值`,c);const l=_.get(e,'持有物品',{});_.set(t,`${i}.离场时持有的物品`,l),console.log(`[次要角色管理] ${n} 离场状态已保存 - 信任值: ${c}, 物品数量: ${Object.keys(l).length}`)}function l(t){if(!_.has(t,'plot_record.剧情节点记录'))return;const e=_.get(t,'plot_record.剧情节点记录');if(Array.isArray(e)){const o=e.length,r=n(e);r.length!==o&&(_.set(t,'plot_record.剧情节点记录',r),console.log(`[剧情节点去重] 已去除 ${o-r.length} 个重复记录，当前记录数: ${r.length}`))}}const g={'主要角色.白.关注度':{minChange:-.014,maxChange:.026},'主要角色.澪.好感度':{minChange:-.05,maxChange:.08},'主要角色.澪.治愈进度':{minChange:-5,maxChange:Number.POSITIVE_INFINITY},pattern_信任值:{minChange:-.15,maxChange:.2},pattern_好感度:{minChange:-.05,maxChange:.08},pattern_依赖度:{minChange:-.05,maxChange:.08},pattern_认可度:{minChange:-.05,maxChange:.08},pattern_污秽侵蚀度:{minChange:-.05,maxChange:.1},pattern_模因侵蚀率:{minChange:-.3,maxChange:.05}};function u(t,n,e=!1){return o=>{let r=Number(o);isNaN(r)&&(console.warn(`[数值变化限制] 无法将值转换为数字：${o}`),r=t);let s=Math.max(t,Math.min(n,r));return s=e?Math.round(s):function(t){return parseFloat(t.toFixed(5))}(s),s}}const f={'主要角色.白.关注度':u(0,1),'主要角色.澪.好感度':u(-1,1),'主要角色.澪.治愈进度':u(0,90,!0),pattern_信任值:u(-1,1),pattern_好感度:u(-1,1),pattern_依赖度:u(-1,1),pattern_认可度:u(-1,1),pattern_污秽侵蚀度:u(0,1),pattern_模因侵蚀率:u(0,1)};function h(t,n,e=null){const o=function(t){if(f[t])return f[t];if(t.includes('次要角色')&&t.endsWith('.信任值'))return f.pattern_信任值;if(t.includes('特殊角色')){if(t.endsWith('.好感度'))return f.pattern_好感度;if(t.endsWith('.依赖度'))return f.pattern_依赖度;if(t.endsWith('.认可度'))return f.pattern_认可度;if(t.endsWith('.污秽侵蚀度'))return f.pattern_污秽侵蚀度;if(t.endsWith('.模因侵蚀率'))return f.pattern_模因侵蚀率}return null}(n),r=function(t){if(g[t])return g[t];if(t.includes('次要角色')&&t.endsWith('.信任值'))return g.pattern_信任值;if(t.includes('特殊角色')){if(t.endsWith('.好感度'))return g.pattern_好感度;if(t.endsWith('.依赖度'))return g.pattern_依赖度;if(t.endsWith('.认可度'))return g.pattern_认可度;if(t.endsWith('.污秽侵蚀度'))return g.pattern_污秽侵蚀度;if(t.endsWith('.模因侵蚀率'))return g.pattern_模因侵蚀率}return null}(n);if(!o)return t;try{let s=o(t);if(r&&null!==e&&'number'==typeof e&&(s=function(t,n,e,o){const r=t-n;if(e.maxChange===Number.POSITIVE_INFINITY){if(r<0&&r<e.minChange){const t=n+e.minChange;return console.log(`变化幅度限制: ${o} 负向变化 ${r.toFixed(5)} 限制为 ${e.minChange}`),t}return t}if(r>e.maxChange){const t=n+e.maxChange;return console.log(`变化幅度限制: ${o} 正向变化 ${r.toFixed(5)} 限制为 ${e.maxChange}`),t}if(r<e.minChange){const t=n+e.minChange;return console.log(`变化幅度限制: ${o} 负向变化 ${r.toFixed(5)} 限制为 ${e.minChange}`),t}return t}(s,e,r,n),s=o(s)),s!==t){const e='number'!=typeof t?'类型转换':'范围限制';console.log(`数值修复: ${n} 从 ${t} ${e}为 ${s}`)}return s}catch(e){return console.error(`数值验证失败: ${n} = ${t}`,e instanceof Error?e.message:String(e)),t}}const p='var-change-worldbook-scan';const d=[];function m(n){if(console.log('Variable update started'),n?.stat_data){a(n.stat_data);const e=_.get(n.stat_data,'次要角色');_.set(n.stat_data,t,_.cloneDeep(e))}}function C(t,n,e,o){console.log(`Variable updated: ${n} from ${e} to ${o}`),d.push({stat_data:t,path:n,oldValue:e,newValue:o}),function(t,n){'次要角色'===n&&a(t)}(t,n),function(t,n,e,o){'plot_record.剧情进度'===n&&(console.log(`剧情进度从 "${e}" 变更为 "${o}"`),_.has(t,'plot_record.剧情节点记录')&&(_.set(t,'plot_record.剧情节点记录',[]),console.log('已清空剧情节点记录'))),'plot_record.剧情节点记录'===n&&l(t)}(t,n,e,o),function(t,n,e){'主要角色.澪.注入星尘稳定剂'===n&&1===e&&(console.log('澪.注入星尘稳定剂 的值变为 1，设置治愈进度为 90'),_.has(t,'主要角色.澪.治愈进度')&&(_.set(t,'主要角色.澪.治愈进度',90),console.log('澪的治愈进度已设置为 90'))),'主要角色.澪.治愈进度'===n&&1===_.get(t,'主要角色.澪.注入星尘稳定剂')&&(console.log('澪已注入星尘稳定剂，治愈进度不得修改，恢复为 90'),_.set(t,'主要角色.澪.治愈进度',90))}(t,n,o)}function y(e){if(console.log('Variable update ended'),d.length>0){console.log(`[延迟验证] 处理 ${d.length} 个待验证的变量更新`);for(const t of d){const{stat_data:n,path:e,oldValue:o,newValue:r}=t,s=_.get(n,e),a=h(s,e,o);a!==s&&(_.set(n,e,a),console.log(`[延迟验证] 数值已修复: ${e} = ${a}`))}d.length=0}if(e?.stat_data){a(e.stat_data),l(e.stat_data),function(t){const e=[],o=['<user>','白','澪'];for(const n of o)_.has(t,`主要角色.${n}`)&&(e.push(`主要角色.${n}.身份`),'白'!==n&&e.push(`主要角色.${n}.当前状态`));const r=['Lily','布施翠','蛭子小比奈'];for(const n of r)_.has(t,`特殊角色.${n}`)&&(e.push(`特殊角色.${n}.身份`),e.push(`特殊角色.${n}.当前状态`));let s=0;for(const o of e){const e=_.get(t,o);if(Array.isArray(e)&&e.length>0){const r=e.length,a=n(e);a.length!==r&&(_.set(t,o,a),s+=r-a.length,console.log(`[数组去重] ${o}: 去除 ${r-a.length} 个重复项`))}}s>0&&console.log(`[数组去重] 总共去除 ${s} 个重复项`)}(e.stat_data);const o=_.get(e.stat_data,'次要角色'),r=_.get(e.stat_data,t);r&&o&&function(t,n,e){if(!n||!e)return;const o=Object.keys(n),r=Object.keys(e),s=r.filter(t=>!o.includes(t));for(const n of s)i(t,n);const a=o.filter(t=>!r.includes(t));for(const e of a)c(t,e,n[e])}(e.stat_data,r,o),_.set(e.stat_data,t,_.cloneDeep(o)),function(t){const n=[],e=_.get(t,'全局信息.当前位置','');e&&'string'==typeof e&&n.push(e.trim());const o=_.get(t,'次要角色',{});if(_.isObject(o)&&!Array.isArray(o))for(const t of Object.keys(o))t&&'string'==typeof t&&n.push(t.trim());const r=[...new Set(n)].filter(t=>t.length>0);if(r.length>0){uninjectPrompts([p]);const t=r.join(', ');try{injectPrompts([{id:p,position:'none',depth:0,role:'user',content:t,should_scan:!0}]),console.log(`[世界书扫描] 注入扫描文本: ${t}`)}catch(t){console.warn('[世界书扫描] 注入扫描文本失败:',t instanceof Error?t.message:String(t))}}else uninjectPrompts([p])}(e.stat_data)}}$(()=>{eventOn('mag_variable_update_started',m),eventOn('mag_variable_updated',C),eventOn('mag_variable_update_ended',y),console.log('MVU变量处理脚本已加载')});
//# sourceMappingURL=index.js.map